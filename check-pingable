# Bash function to check if a fqdn can be pinged.
#
# You can allow for occasional dropped packets by adjusting the number of pings
# to use in the test (using the -p flag). Only if all pings fail will the fqdn
# be classed as down. 

check_pingable()
{
  # Process options.
  num_pings=3
  OPTIND=1
  while getopts 'p:' opt; do
    case "$opt" in
      p) num_pings="$OPTARG" ;;
      *) echo "Usage: check_alive [ -p <number of pings> ] fqdn\n  -p The number of pings to use (default is 3)."
         error=1 ;;
    esac
  done

  # Remove any processed options from argv.
  for i in $(seq 2 $OPTIND); do
    shift
  done

  # Assign remaining argument to variable.
  fqdn=$1
  if [ -z "$fqdn" ]; then
    echo "No fqdn supplied."
    exit 1
  fi
 
  # Check if fqdn is resolvable.
  if [ -z "$(dig $fqdn a +short)" ]; then
    echo "Cannot resolve that fqdn."
    exit 1
  fi

  # Ping the target fqdn.
  for i in $(seq $num_pings); do
    results[$i]=$(ping -c 1 $fqdn >/dev/null; echo $?)
    sleep 1
  done

  # If all pings fail, return error and failure message.
  if [[ ! $(echo ${results[@]} | grep 0) ]]; then
    echo "$fqdn is down"
    return 1
  fi
}

check_pingable $@

# EOF
