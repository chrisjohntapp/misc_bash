#!/bin/bash

# Does not change hosts file, fstab, exports

primary_gateway="10.110.73.1"
dr_gateway="192.168.2.254"
primary_net="10.110.73"
dr_net="192.168.2"

# Logging
readonly script_name=$(basename $0)
function log() {
    echo "$(date) $@"
    logger -s "$(date) $@" 2>> /var/log/dr.log
}
function err() {
    echo "$(date) $@" >&2
    logger -s "$(date) $@" 2>> /var/log/dr.log
}

#------------------------------------------------

function restart_networking_centos() {
    log "Restarting network to apply the new configuration."
    case "$1" in
        6) service network restart ;;
        7) systemctl restart network.service ;;
        *) log "CentOS version not recognised."
           exit 1 ;;
    esac
}

function restart_networking_ubuntu() {
    log "Restaring networking to apply the new configuration."
    case "$1" in
        12.04) /etc/init.d/networking restart ;; 
        1[46].04) service networking restart ;;
        18.04) systemctl restart systemd-networkd.service ;;
        *    ) log "Ubuntu version not recognised."
               exit 1 ;;
    esac
}

#------------------------------------------------

function check_gateway() { # 1:gateway_ip
    # Ping the gateway to make sure we're on the expected network.
    log "Sending ping requests to $1."
    ping -c 1 -t 1 $1 > /dev/null
}

#------------------------------------------------

function update_centos() { # 1:os_version, 2:old_network, 3:new_network
    ifcfg_files=($(ls /etc/sysconfig/network-scripts/ifcfg-*))
    for ((i=0; i<${#ifcfg_files[@]}; i++)); do
        log "Changing IP range from $2 to $3 on ${ifcfg_files[i]}."
        sed -i "s/$2/$3/" ${ifcfg_files[i]}
    done
}

function update_ubuntu_12() { # 1:old_network, 2:new_network
    log "Changing IP range from $1 to $2 on /etc/network/interfaces."
    sed -i "s/$1/$2/" /etc/network/interfaces

    log "Collecting network script files."
    ifcfg_files=($(ls /etc/network/interfaces.d/*.cfg))
    for ((i=0; i<${#ifcfg_files[@]}; i++)); do
        log "Changing IP range from $1 to $2 on ${ifcfg_files[i]}."
        sed -i "s/$1/$2/" ${ifcfg_files[i]}
    done
}

function update_ubuntu() { # 1:os_version
    case "$1" in
        1[246].04) shift; update_ubuntu_12 "$@" ;;
        18.04    ) shift; update_ubuntu_18 "$@" ;;
        *        ) log "Ubuntu OS version not recognised."
                   exit 1
    esac
}

#------------------------------------------------

os_vendor=$(grep -E "^ID=" /etc/os-release | cut -d"=" -f2 | sed 's/"//g') || \
  { log "Failed to identify OS vendor; exiting."; exit 1; }
os_version=$(grep -E "^VERSION_ID=" /etc/os-release | cut -d"=" -f2 | sed 's/"//g') || \
  { log "Failed to identify OS version; exiting."; exit 1; }

check_gateway "${primary_gateway}"
if [ $? -eq 0 ]; then
    log "${primary_gateway} is reachable. No config changes will be applied."
    exit 0
else
    log "${primary_gateway} is not reachable. Assuming we've failed over to DR site. Updating IP address."
    update_${os_vendor} ${os_version} ${primary_net} ${dr_net}
    restart_networking_${os_vendor} ${os_version}
fi

check_gateway "${dr_gateway}"
if [ $? -eq 0 ]; then
    log "${dr_gateway} is reachable. This VM appears to be on the DR site."
    exit 0
else
    log "${dr_gateway} is not reachable. Something seems wrong. Reverting to primary site IP address."
    update_${os_vendor} ${os_version} ${dr_net} ${primary_net}
    restart_networking_${os_vendor} ${os_version}
fi

